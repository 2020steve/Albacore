---
layout: post
title: "v0.1.1 Release Notes: AssemblyInfo Config, Arbitrary Parameters, and TeamCity"
---

Albacore v0.1.1 was just pushed up to Gemcutter. It contains a bug fix for the ["YAML configuration":http://wiki.github.com/derickbailey/Albacore/yamlconfig] of the ["AssemblyInfo task":http://wiki.github.com/derickbailey/Albacore/assemblyinfotask], the ability to pass any arbitrary command line parameters you want to a task that runs a command line tool, and a little better support for running NUnit / ["NCoverConsole":http://wiki.github.com/derickbailey/Albacore/ncoverconsoletask] from TeamCity. 

h2. Fixing The YAML Configuration For AssemblyInfo

In the v0.1.0 release of Albacore, we ["changed the convention used for YAML configuration of tasks":{{ site.url }}/2010/01/25/v0.1.0-YAML-Configuration-And-Global-Settings.html]. Unfortunately there was a small bug in the AssemblyInfo task and it was still trying to load YAML files based on the object type instead of the task name. This has been corrected in v0.1.1 and the AssemblyInfo task is now loading YAML files by the task name, correctly.

This task definition, <code>assemblyinfo :versioning</code>, will look for a file called <code>versioning.yml</code>.

h2. Allow Any Aribtrary Parameters For Command Line Tasks

Many of the tasks in Albacore will compile the various options that you specify into a command line parameter set for the executable that you are trying to run. For example, the <code>msbuild</code> task will call out to the "msbuild.exe" with properties and targets set. 

In order to make these tasks more flexible and capable of running with options that are not yet supported by the task configuration, directly, we have added a generic <code>.parameters</code> attribute to all tasks that run a command line tool. This will allows you to use any arbitrary parameters that you want, when calling the task. For example:

<pre><code>msbuild :build do |msb|
  #... other options here
  msb.parameters "i'm a parameter!", "/some:value", "/whatever=idontknow"
end
</code></pre>

Of course, this example won't actually execute since these are not valid options... the point is that you can now specify any command line parameters you want on any task that has a <code>.path_to_command</code> setting.

h2. A Little More Support For TeamCity

This was supposed to be released with v0.1.0 but I missed it. Andreone ["pointed out an issue and solution for running NUnit and NCoverConsole with TeamCity":http://groups.google.com/group/albacoredev/browse_thread/thread/72f19975fa1c0f3f]. The solution was to swap the order of arguments that are passed to the command line. 

This fix will provide a little more support for the TeamCity CI server and it's built in metrics and reporting capabilities.

h2. Future Releases

There has been a lot of great discussion on the future of Albacore over at the ["discussion group":http://groups.google.com/group/albacoredev]. We haven't yet committed to any direction or functionality for the next release, though. We'd really like to hear what you are wanting and needing out of Albacore so that we can be sure to include those needs.